{"version":3,"sources":["config/food-items.js","components/FoodDropdown.js","config/place-items.js","components/PlaceDropdown.js","components/RowComponent.js","Pages/bb-page.js","App.js","reportWebVitals.js","index.js"],"names":["food","FoodDropdown","props","itemTypes","Object","keys","foodOptions","forEach","elem","push","key","text","value","innerElem","Dropdown","placeholder","fluid","multiple","search","selection","options","onChange","e","data","setFoodsSelected","places","PlaceDropdown","placeOptions","place","setPlaceSelected","RowComponent","useState","foodsSelected","placeSelected","useEffect","console","log","style","display","BBPage","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAaA,EAAO,CAClB,eAAgB,CACN,eACA,gBACA,SACA,gBACA,eACV,KAAQ,CACA,aACA,e,OC0BKC,EA/BM,SAACC,GAElB,IAAMC,EAAYC,OAAOC,KAAKL,GACxBM,EAAc,GACpBH,EAAUI,SAAQ,SAACC,GACjBF,EAAYG,KAAK,CACfC,IAAKF,EAAMG,KAAM,4BAAIH,IAAWI,MAAOJ,IAEzCR,EAAKQ,GAAMD,SAAQ,SAACM,GAClBP,EAAYG,KACV,CACEC,IAAIG,EAAYF,KAAM,6BAAKE,IAAiBD,MAAOC,UAU7D,OAAO,cAACC,EAAA,EAAD,CACCC,YAAY,OACZC,OAAK,EACLC,UAAQ,EACRC,QAAM,EACNC,WAAS,EACTC,QAASd,EACTe,SAXa,SAACC,EAAEC,GACpBrB,EAAMsB,iBAAiBD,EAAKX,WCtBrBa,EAAS,CAAC,SAAS,QAAQ,cC0BzBC,EAtBO,SAACxB,GAEnB,IAAMyB,EAAe,GACrBF,EAAOlB,SAAQ,SAACqB,GAAD,OACfD,EAAalB,KAAK,CACdC,IAAIkB,EAAQjB,KAAMiB,EAAOhB,MAAOgB,OAQtC,OAAO,cAACd,EAAA,EAAD,CACCC,YAAY,QACZC,OAAK,EACLE,QAAM,EACNC,WAAS,EACTC,QAASO,EACTN,SAVa,SAACC,EAAEC,GACpBrB,EAAM2B,iBAAiBN,EAAKX,WCSnBkB,EAnBM,WAEnB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAqBR,EAArB,KACA,EAA0CO,mBAAS,IAAnD,mBAAOE,EAAP,KAAqBJ,EAArB,KAOA,OALAK,qBAAU,WACRC,QAAQC,IAAIJ,EAAcC,KAC1B,CAACD,EAAcC,IAIjB,sBAAKI,MAAO,CAACC,QAAQ,OAAO,cAAgB,OAA5C,UACE,cAAC,EAAD,CAAcd,iBAAkBA,IAChC,cAAC,EAAD,CAAeK,iBAAkBA,QCXtBU,EAJA,kBACb,cAAC,EAAD,KCYaC,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,iDACA,cAAC,EAAD,UCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c01aa03.chunk.js","sourcesContent":["export const food = {\n  \"Indian Bread\": [\n            \"Ghar ka Roti\",\n            \"Tandoori Naan\",\n            \"Kulcha\",\n            \"Tandoori Roti\",\n            \"Butter Naan\"],\n  \"Rice\" :[\n          \"Jeera Rice\",\n          \"Plain Rice\"\n  ]\n}","import React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport {food} from \"../config/food-items\";\n\nconst FoodDropdown = (props) => {\n\n    const itemTypes = Object.keys(food);\n    const foodOptions = [];\n    itemTypes.forEach((elem) => {\n      foodOptions.push({\n        key: elem, text: <b>{elem}</b>, value: elem \n      })\n      food[elem].forEach((innerElem) => {\n        foodOptions.push(\n          {\n            key:innerElem , text: <li>{innerElem}</li>, value: innerElem \n          }\n        )\n      });\n    });\n\n    const selectItem = (e,data)=>{\n      props.setFoodsSelected(data.value);\n    }\n\n  return <Dropdown \n          placeholder='Food' \n          fluid \n          multiple \n          search\n          selection \n          options={foodOptions} \n          onChange={selectItem}/>\n};\n\nexport default FoodDropdown;","export const places = ['Chutki','Puchu','Individual'];","import React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport {places} from \"../config/place-items\";\n\nconst PlaceDropdown = (props) => {\n\n    const placeOptions = [];\n    places.forEach((place) => \n    placeOptions.push({\n        key:place , text: place, value: place \n      }\n    ));\n\n    const selectItem = (e,data)=>{\n      props.setPlaceSelected(data.value);\n    }\n\n  return <Dropdown \n          placeholder='Place' \n          fluid \n          search\n          selection \n          options={placeOptions} \n          onChange={selectItem}/>\n};\n\nexport default PlaceDropdown;","import React,{useState,useEffect} from \"react\";\nimport FoodDropdown from \"./FoodDropdown\";\nimport PlaceDropdown from \"./PlaceDropdown\";\n\nconst RowComponent = ()=>{\n\n  const [foodsSelected,setFoodsSelected] =  useState([]);\n  const [placeSelected,setPlaceSelected] =  useState([]);\n\n  useEffect(()=>{\n    console.log(foodsSelected,placeSelected);\n  },[foodsSelected,placeSelected]);\n\n\n  return (\n  <div style={{display:\"flex\",\"flexDirection\":\"row\"}}>\n    <FoodDropdown setFoodsSelected={setFoodsSelected} />\n    <PlaceDropdown setPlaceSelected={setPlaceSelected}/>\n  </div>\n);\n}\n  \n\nexport default RowComponent;\n","import RowComponent from \"../components/RowComponent\";\n\nconst BBPage = ()=>(\n  <RowComponent />\n);\n\nexport default BBPage;","import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport BBPage from \"./Pages/bb-page\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>BB Planning App</h2>\n        <BBPage/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}